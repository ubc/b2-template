/* To prevent this building block's CSS from having unintentional effects, put
 * it all under the wrapping ng-app div's class. One reason for using SASS is
 * the easy way that we can specify nested rules. In this example, every rule
 * is nested under the TemplateApp class without having to respecify the
 * TemplateApp selector for every rule. */
.TemplateApp {
  /* SASS lets you declare variables, these are scoped to .TemplateApp */
  /* The username form */
  /* The user information display */
  /* The status indicators for the form submit */ }
  .TemplateApp input[type="text"] {
    padding: 0.3em;
    border: 1px solid #aaa; }
  .TemplateApp form {
    margin-bottom: 1em; }
  .TemplateApp dl {
    width: 30em; }
  .TemplateApp dt {
    display: inline-block;
    width: 9em;
    padding-right: 1em;
    text-align: right; }
  .TemplateApp dd {
    width: 20em;
    display: inline-block;
    clear: right; }
  .TemplateApp span {
    padding: 0.5em;
    color: white;
    /* & is replaced with the parent, in this case, it compiles to
     * "span.working". Without the &, it compiles to "span .working", the
     * only difference is the space between span and .working which gives
     * them different CSS meanings. */ }
    .TemplateApp span.processing {
      background-color: royalblue; }
    .TemplateApp span.success {
      background-color: green; }
    .TemplateApp span.error {
      background-color: firebrick; }
