<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<!-- Configure Jersey to serve REST calls -->
	<servlet>
		<servlet-name>TemplateApp</servlet-name> <!-- CHANGEME -->
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer
		</servlet-class>
		<!-- Jersey can scan packages for resources and register them automatically, we specify the packages to be scanned here -->
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>ca.ubc.ctlt</param-value> <!-- CHANGEME to whatever package you're using -->
		</init-param>
	</servlet>

    <servlet-mapping>
        <servlet-name>TemplateApp</servlet-name> <!-- CHANGEME, must match servlet-name given above -->
        <!-- Limit all REST calls to /api/*, this lets us serve static content
        on non /api/* urls. The alternative is to set Jersey up as a filter. But
        the filter requires you to specify a regex to pass static content
        through. I'd rather not have to update the regex every time there's a
        new static filetype through. -->
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>
	
</web-app>